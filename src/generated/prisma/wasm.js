
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.MarkerScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  title: 'title',
  description: 'description',
  latitude: 'latitude',
  longitude: 'longitude',
  type: 'type',
  icon: 'icon',
  eventId: 'eventId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  name: 'name',
  email: 'email',
  imageUrl: 'imageUrl',
  bio: 'bio',
  phone: 'phone',
  location: 'location',
  birthdate: 'birthdate',
  gender: 'gender',
  website: 'website',
  facebook: 'facebook',
  instagram: 'instagram',
  twitter: 'twitter',
  linkedin: 'linkedin',
  interests: 'interests',
  languages: 'languages',
  isPublic: 'isPublic',
  lastActiveAt: 'lastActiveAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EventScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  type: 'type',
  date: 'date',
  location: 'location',
  latitude: 'latitude',
  longitude: 'longitude',
  image: 'image',
  createdAt: 'createdAt',
  organizerId: 'organizerId'
};

exports.Prisma.TargetGroupScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.EventTargetGroupsScalarFieldEnum = {
  eventId: 'eventId',
  targetGroupId: 'targetGroupId'
};

exports.Prisma.SignupScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  eventId: 'eventId',
  age: 'age',
  createdAt: 'createdAt'
};

exports.Prisma.RoleScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  eventId: 'eventId',
  role: 'role',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  Marker: 'Marker',
  User: 'User',
  Event: 'Event',
  TargetGroup: 'TargetGroup',
  EventTargetGroups: 'EventTargetGroups',
  Signup: 'Signup',
  Role: 'Role'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\tuisk\\OneDrive\\Työpöytä\\Project R\\project-r\\src\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\tuisk\\OneDrive\\Työpöytä\\Project R\\project-r\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../src/generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel Marker {\n  id          String   @id @default(cuid())\n  userId      String\n  title       String\n  description String?\n  latitude    Float\n  longitude   Float\n  type        String\n  icon        String?\n  eventId     String? // Optional, if linked to an event\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  event Event? @relation(fields: [eventId], references: [id])\n\n  User User[]\n}\n\nmodel User {\n  id           String    @id @default(cuid())\n  userId       String    @unique\n  name         String?\n  email        String    @unique\n  imageUrl     String?\n  bio          String? // Short user bio/description\n  phone        String? // Optional phone number\n  location     String? // City or region\n  birthdate    DateTime? // Optional birthdate\n  gender       String? // Optional gender\n  website      String? // Personal website\n  facebook     String? // Facebook profile URL\n  instagram    String? // Instagram handle/URL\n  twitter      String? // Twitter/X handle/URL\n  linkedin     String? // LinkedIn profile URL\n  interests    String[] // Array of interests/tags\n  languages    String[] // Languages spoken\n  isPublic     Boolean   @default(true) // Profile visibility\n  lastActiveAt DateTime? // Last seen/active timestamp\n  createdAt    DateTime  @default(now())\n  updatedAt    DateTime  @updatedAt\n\n  // Add relations as needed, for example:\n  events  Event[]  @relation(\"OrganizerEvents\")\n  signups Signup[]\n  roles   Role[]\n  markers Marker[] // Added relation to Marker\n}\n\nmodel Event {\n  id          String   @id @default(cuid())\n  title       String   @db.VarChar(255)\n  description String?  @db.Text\n  type        String   @db.VarChar(100)\n  date        DateTime\n  location    String   @db.VarChar(255)\n  latitude    Float?   @db.DoublePrecision\n  longitude   Float?   @db.DoublePrecision\n  image       String?  @db.Text\n  createdAt   DateTime @default(now())\n  organizerId String\n\n  targetGroups EventTargetGroups[]\n  signups      Signup[]\n  roles        Role[]\n  Marker       Marker[]\n  User         User[]              @relation(\"OrganizerEvents\")\n\n  @@index([organizerId])\n  @@index([date])\n}\n\nmodel TargetGroup {\n  id     String              @id @default(cuid())\n  name   String\n  events EventTargetGroups[]\n}\n\nmodel EventTargetGroups {\n  eventId       String\n  targetGroupId String\n\n  event       Event       @relation(fields: [eventId], references: [id])\n  targetGroup TargetGroup @relation(fields: [targetGroupId], references: [id])\n\n  @@id([eventId, targetGroupId])\n}\n\nmodel Signup {\n  id        String   @id @default(cuid())\n  userId    String\n  eventId   String\n  age       Int?\n  createdAt DateTime @default(now())\n\n  event Event  @relation(fields: [eventId], references: [id])\n  User  User[]\n\n  @@unique([userId, eventId])\n}\n\nmodel Role {\n  id        String   @id @default(cuid())\n  userId    String\n  eventId   String\n  role      String\n  createdAt DateTime @default(now())\n\n  event Event @relation(fields: [eventId], references: [id])\n\n  User User[]\n}\n",
  "inlineSchemaHash": "d84f9a6659e1a56b8409534c29479c1d0d6e6e58b2c7656dd5994be5ec44f565",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Marker\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"latitude\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"longitude\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"icon\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"eventId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"event\",\"kind\":\"object\",\"type\":\"Event\",\"relationName\":\"EventToMarker\"},{\"name\":\"User\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"MarkerToUser\"}],\"dbName\":null},\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"imageUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bio\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"birthdate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"gender\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"website\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"facebook\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"instagram\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"twitter\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"linkedin\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"interests\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"languages\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isPublic\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"lastActiveAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"events\",\"kind\":\"object\",\"type\":\"Event\",\"relationName\":\"OrganizerEvents\"},{\"name\":\"signups\",\"kind\":\"object\",\"type\":\"Signup\",\"relationName\":\"SignupToUser\"},{\"name\":\"roles\",\"kind\":\"object\",\"type\":\"Role\",\"relationName\":\"RoleToUser\"},{\"name\":\"markers\",\"kind\":\"object\",\"type\":\"Marker\",\"relationName\":\"MarkerToUser\"}],\"dbName\":null},\"Event\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"latitude\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"longitude\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"organizerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"targetGroups\",\"kind\":\"object\",\"type\":\"EventTargetGroups\",\"relationName\":\"EventToEventTargetGroups\"},{\"name\":\"signups\",\"kind\":\"object\",\"type\":\"Signup\",\"relationName\":\"EventToSignup\"},{\"name\":\"roles\",\"kind\":\"object\",\"type\":\"Role\",\"relationName\":\"EventToRole\"},{\"name\":\"Marker\",\"kind\":\"object\",\"type\":\"Marker\",\"relationName\":\"EventToMarker\"},{\"name\":\"User\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"OrganizerEvents\"}],\"dbName\":null},\"TargetGroup\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"events\",\"kind\":\"object\",\"type\":\"EventTargetGroups\",\"relationName\":\"EventTargetGroupsToTargetGroup\"}],\"dbName\":null},\"EventTargetGroups\":{\"fields\":[{\"name\":\"eventId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"targetGroupId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"event\",\"kind\":\"object\",\"type\":\"Event\",\"relationName\":\"EventToEventTargetGroups\"},{\"name\":\"targetGroup\",\"kind\":\"object\",\"type\":\"TargetGroup\",\"relationName\":\"EventTargetGroupsToTargetGroup\"}],\"dbName\":null},\"Signup\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"eventId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"age\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"event\",\"kind\":\"object\",\"type\":\"Event\",\"relationName\":\"EventToSignup\"},{\"name\":\"User\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SignupToUser\"}],\"dbName\":null},\"Role\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"eventId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"event\",\"kind\":\"object\",\"type\":\"Event\",\"relationName\":\"EventToRole\"},{\"name\":\"User\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"RoleToUser\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

